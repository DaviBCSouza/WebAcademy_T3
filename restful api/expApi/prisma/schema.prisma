model Usuario {
  id            String      @id @default(uuid()) @db.Char(40)
  nome          String      @db.VarChar(100)
  email         String      @unique @db.VarChar(100)
  senha         String      @db.Char(60)
  tipoUsuario   TipoUsuario @relation(fields: [tipoUsuarioId], references: [id])
  tipoUsuarioId String      @db.Char(40)
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")
  compras       Compra[]

  @@map("usuarios")
}

model TipoUsuario {
  id        String    @id @default(uuid()) @db.Char(40)
  rotulo    String    @db.VarChar(10)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  usuarios  Usuario[]

  @@map("tipos_usuarios")
}

model Compra {
  id          String       @id @default(uuid()) @db.Char(40)
  usuario     Usuario      @relation(fields: [usuarioId], references: [id])
  usuarioId   String       @db.Char(40)
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  compraItens CompraItem[]

  @@map("compras")
}

model CompraItem {
  id         String   @id @default(uuid()) @db.Char(40)
  compra     Compra   @relation(fields: [compraId], references: [id])
  compraId   String   @db.Char(40)
  produto    Produto  @relation(fields: [produtoId], references: [id])
  produtoId  String   @db.Char(40)
  quantidade Int
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("compra_itens")
}

model Produto {
  id          String       @id @default(uuid()) @db.Char(40)
  nome        String       @unique @db.VarChar(100)
  preco       Float
  estoque     Int
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  compraItens CompraItem[]

  @@map("produtos")
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
